{
  "title": "Simulation",
  "type": "object",
  "required": ["events", "cores", "repetitions", "policy", "class"],
  "definitions": {
    "sampler": {
      "oneOf": [
        {
          "type": "object",
          "title": "Not defined"
        },
        {
          "type": "object",
          "title": "Exponential",
          "required": ["distribution"],
          "properties": {
            "distribution": {
              "type": "string",
              "enum": ["exponential"],
              "default": "exponential",
              "options": {
                "hidden": true
              },
              "readOnly": true
            },
            "prob": {
              "type": "number",
              "title": "Probability",
              "description": "Only meaningful for arrival, all classes must define it. The probabilities will be normalised."
            },
            "lambda": {
              "type": "number",
              "title": "λ (rate)"
            },
            "mean": { "type": "number", "title": "μ (mean)" }
          }
        },
        {
          "type": "object",
          "required": ["distribution", "value"],
          "title": "Deterministic",
          "properties": {
            "distribution": {
              "type": "string",
              "enum": ["deterministic"],
              "default": "deterministic",
              "options": {
                "hidden": true
              },
              "readOnly": true
            },
            "value": {
              "type": "number",
              "title": "Value"
            }
          }
        },
        {
          "type": "object",
          "required": ["distribution", "alpha"],
          "title": "Bounded Pareto",
          "properties": {
            "distribution": {
              "type": "string",
              "enum": ["bounded pareto"],
              "default": "bounded pareto",
              "options": {
                "hidden": true
              },
              "readOnly": true
            },
            "alpha": {
              "type": "number",
              "title": "α (shape)"
            },
            "rate": {
              "type": "number",
              "title": "λ (rate)"
            },
            "mean": {
              "type": "number",
              "title": "μ (mean)"
            },
            "L": {
              "type": "number",
              "title": "L (lower bound)"
            },
            "H": {
              "type": "number",
              "title": "H (upper bound)"
            }
          }
        },
        {
          "type": "object",
          "required": ["distribution", "alpha", "m"],
          "title": "Frechet",
          "properties": {
            "distribution": {
              "type": "string",
              "enum": ["frechet"],
              "default": "frechet",
              "options": {
                "hidden": true
              },
              "readOnly": true
            },
            "alpha": {
              "type": "number",
              "title": "α (shape)"
            },
            "rate": {
              "type": "number",
              "title": "λ (rate)"
            },
            "mean": {
              "type": "number",
              "title": "μ (mean)"
            },
            "s": {
              "type": "number",
              "title": "s (scale)"
            },
            "m": {
              "type": "number",
              "title": "m (location)",
              "default": 0,
              "minimum": 0
            }
          }
        },
        {
          "type": "object",
          "required": ["distribution"],
          "title": "Uniform",
          "properties": {
            "distribution": {
              "type": "string",
              "enum": ["uniform"],
              "default": "uniform",
              "options": {
                "hidden": true
              },
              "readOnly": true
            },
            "mean": {
              "type": "number",
              "title": "Mean",
              "description": "Mean of the uniform distribution, the limits will be 0.5*mean and 1.5*mean"
            },
            "min": {
              "type": "number",
              "title": "Mininum"
            },
            "max": {
              "type": "number",
              "title": "Maximum"
            }
          }
        }
      ]
    }
  },
  "properties": {
    "identifier": {
      "type": "string",
      "description": "Name of the simulation to use in output files. The filename will be used by default",
      "title": "Identifier"
    },
    "repetitions": {
      "title": "Simulation repetitions",
      "type": "integer",
      "minimum": 1,
      "default": 10
    },
    "events": {
      "title": "Events per repetition",
      "type": "integer",
      "minimum": 1000,
      "default": 100000
    },
    "cores": {
      "title": "Server cores",
      "type": "integer",
      "description": "Number of cores of the simulated server",
      "minimum": 1
    },
    "policy": {
      "title": "Policy",
      "type": "string",
      "enum": [
        "smash",
        "server filling",
        "server filling memoryful",
        "back filling",
        "quick swap",
        "most server first"
      ],
      "options": {
        "enum_titles": [
          "SMASH",
          "Server Filling",
          "Server Filling (memoryful)",
          "BackFilling",
          "MSF with Quickswap",
          "Most Server First"
        ]
      }
    },
    "smash.window": {
      "title": "Window for SMASH policy",
      "type": "integer",
      "minimum": 1,
      "description": "Tip! 1 is equivalent to FIFO",
      "options": {
        "dependencies": {
          "policy": "smash"
        }
      }
    },
    "generator": {
      "title": "Random number generator",
      "type": "string",
      "enum": ["lecuyer"]
    },
    "arrival": {
      "title": "Default arrival distribution",
      "$ref": "#/definitions/sampler"
    },
    "service": {
      "title": "Default service distribution",
      "$ref": "#/definitions/sampler"
    },
    "class": {
      "type": "array",
      "title": "Jobs classes",
      "uniqueItems": true,
      "items": {
        "type": "object",
        "title": "Class",
        "headerTemplate": "{{self.cores}} cores",
        "required": ["cores"],
        "properties": {
          "cores": {
            "title": "Required cores",
            "type": "integer",
            "minimum": 1,
            "default": 42
          },
          "name": {
            "type": "string",
            "description": "If not defined, the cores number will be used as name"
          },
          "arrival": {
            "title": "Arrival distribution parameters",
            "$ref": "#/definitions/sampler"
          },
          "service": {
            "title": "Service distribution parameters",
            "$ref": "#/definitions/sampler"
          }
        }
      }
    }
  }
}
